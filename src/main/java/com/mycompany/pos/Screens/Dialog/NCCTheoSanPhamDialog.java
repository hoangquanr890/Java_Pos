/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.pos.Screens.Dialog;

import com.mycompany.pos.entity.Customer;
import com.mycompany.pos.entity.ImportInvoice;
import com.mycompany.pos.entity.Product;
import com.mycompany.pos.entity.Stock;
import com.mycompany.pos.entity.Supplier;
import com.mycompany.pos.service.ImportInvoiceService;
import com.mycompany.pos.service.ProductService;
import com.mycompany.pos.service.StockService;
import com.mycompany.pos.service.SupplierService;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 *
 * @author luuhiep
 */
@Component
public class NCCTheoSanPhamDialog extends javax.swing.JFrame {
    
    private ThemHangDialog _themHangDialog;
    
    private SupplierService _supplierService;
    private ProductService _productService;
    private StockService _stockService;
    private ImportInvoiceService _importInvoiceService;
    
    private List<Supplier> _listSupplier;
    private List<Stock> _listStock;
    private List<Product> _listProduct;
    private Product _product;
    private List<ImportInvoice> _listImportInvoice;
    
    
    
    /**
     * Creates new form SanPhamTheoNCCDialog
     */
    public NCCTheoSanPhamDialog() {
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    @Autowired
    public NCCTheoSanPhamDialog(ThemHangDialog              themHangDialog,
                                StockService                stockService,
                                SupplierService             supplierService, 
                                ProductService              productService, 
                                ImportInvoiceService        importInvoiceService) {
        initComponents();
        
        _themHangDialog = themHangDialog;
        
        _stockService = stockService;
        _supplierService = supplierService;
        _productService = productService;
        _importInvoiceService = importInvoiceService;
        addListener();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSupplier = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnThemSanPham1 = new javax.swing.JButton();
        btnThemSanPham2 = new javax.swing.JButton();
        btnThemSanPham3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        labelPrice = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        labelVAT = new javax.swing.JLabel();
        labelStock = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tableSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "STT", "Số lượng", "Ngày thêm", "Ngày đến", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableSupplier.setRowHeight(24);
        tableSupplier.setSize(new java.awt.Dimension(600, 64));
        jScrollPane1.setViewportView(tableSupplier);
        if (tableSupplier.getColumnModel().getColumnCount() > 0) {
            tableSupplier.getColumnModel().getColumn(0).setResizable(false);
            tableSupplier.getColumnModel().getColumn(1).setResizable(false);
            tableSupplier.getColumnModel().getColumn(2).setResizable(false);
            tableSupplier.getColumnModel().getColumn(3).setResizable(false);
            tableSupplier.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Open Sans", 0, 36)); // NOI18N
        jLabel1.setText("Danh sách nhà cung cấp");

        btnThemSanPham1.setText("Trở lại");
        btnThemSanPham1.setMaximumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham1.setMinimumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham1.setPreferredSize(new java.awt.Dimension(70, 20));
        btnThemSanPham1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPham1ActionPerformed(evt);
            }
        });

        btnThemSanPham2.setText("Nhập hàng");
        btnThemSanPham2.setMaximumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham2.setMinimumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham2.setPreferredSize(new java.awt.Dimension(70, 20));
        btnThemSanPham2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPham2ActionPerformed(evt);
            }
        });

        btnThemSanPham3.setText("Xác nhập");
        btnThemSanPham3.setMaximumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham3.setMinimumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham3.setPreferredSize(new java.awt.Dimension(70, 20));
        btnThemSanPham3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPham3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel2.setText("Sản phẩm: ");

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel3.setText("Giá:");

        labelName.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        labelName.setText("Sản phẩm");

        labelPrice.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        labelPrice.setText("2000000000");

        jLabel6.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel6.setText("VAT:");

        labelVAT.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        labelVAT.setText("2000000000");

        labelStock.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        labelStock.setText("0");

        jLabel9.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel9.setText("Số lượng trong kho");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(32, 32, 32))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(94, 94, 94)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelPrice)
                                    .addComponent(labelName))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnThemSanPham3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnThemSanPham2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnThemSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(32, 32, 32)
                                        .addComponent(labelStock))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(94, 94, 94)
                                        .addComponent(labelVAT)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnThemSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThemSanPham2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThemSanPham3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(labelName)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(labelStock)))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(labelVAT))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(labelPrice)))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemSanPham1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPham1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemSanPham1ActionPerformed

    private void btnThemSanPham2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPham2ActionPerformed
        // TODO add your handling code here:
        _themHangDialog.setProduct(_product);
        _themHangDialog.setVisible(true);
    }//GEN-LAST:event_btnThemSanPham2ActionPerformed

    private void btnThemSanPham3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPham3ActionPerformed
        // TODO add your handling code here:
         int index = tableSupplier.getSelectedRow();
        
        ImportInvoice importInvoice = _listImportInvoice.get(index);
        importInvoice.setArrivedAt(new Date());
        importInvoice.setArrived(true);
        
        _importInvoiceService.save(importInvoice);
        _importInvoiceService.confirmArrived(importInvoice);
        loadList();
    }//GEN-LAST:event_btnThemSanPham3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NCCTheoSanPhamDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NCCTheoSanPhamDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NCCTheoSanPhamDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NCCTheoSanPhamDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NCCTheoSanPhamDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThemSanPham1;
    private javax.swing.JButton btnThemSanPham2;
    private javax.swing.JButton btnThemSanPham3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPrice;
    private javax.swing.JLabel labelStock;
    private javax.swing.JLabel labelVAT;
    private javax.swing.JTable tableSupplier;
    // End of variables declaration//GEN-END:variables

    private void addListener(){
        _themHangDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                // your code
                _themHangDialog.clearData();
                loadList();
            }
        });
    }
    
    public void setProduct(Product product){
        _product = product;
        
        double vat = _product.getVat().longValue()/100;
        
        labelName.setText(_product.getName());
        labelPrice.setText(String.format("%,d", _product.getPrice().longValue()));
        labelVAT.setText(String.format("%.2f", vat));
        
        
        loadList();
    }
    
    public void loadList(){
//        loadListSuppliers();
        loadListProduct();
        loadListImportInvoice();
        
        loadTable();
    }

    private void loadListSuppliers(){
        List<Supplier> listSupplier = _supplierService.findAll();
        _listSupplier = listSupplier;
    }
    
    private void loadListProduct(){
        List<Product> listProduct = _productService.findAll();
        _listProduct = listProduct;
        
        loadListStock();
    }
      
    private void loadListStock(){
        List<Stock> listStock = _stockService.findAll();
        _listStock = listStock;
        
        long allStock = 0;
        
        for (Stock s: _listStock){
            if (s.getProduct().getIdProduct() == _product.getIdProduct()) 
                allStock = s.getQuantity();
        }
        
        labelStock.setText(String.format("%,d", allStock));
        
        
    }
    
    
    private void loadListImportInvoice(){
        List<ImportInvoice> listImportInvoice = _importInvoiceService.findAll();
        _listImportInvoice = listImportInvoice;
    }
    
    private void loadTable(){
        DefaultTableModel d = (DefaultTableModel)tableSupplier.getModel();
        d.setRowCount(0);
        
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        int i = 0;
        for(ImportInvoice c: _listImportInvoice) {
            Vector vector = new Vector();
            vector.add(i);
            
            vector.add(c.getQuantity());
            vector.add(formatter.format(c.getOrderedAt()));
            if (c.getArrived() == null||  c.getArrived() == null || null == c.getArrivedAt()){
                vector.add("");
                vector.add("Chưa đến");
            } else { 
                vector.add(formatter.format(c.getArrivedAt()));
                vector.add( "Đã đến");
            }
     
            i++;
            d.addRow(vector);
        }
    }
    
    
    
}
