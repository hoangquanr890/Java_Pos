/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.pos.Screens.Dialog;

import com.mycompany.pos.entity.ImportInvoice;
import com.mycompany.pos.entity.Product;
import com.mycompany.pos.entity.Supplier;
import com.mycompany.pos.service.ImportInvoiceService;
import com.mycompany.pos.service.ProductService;
import com.mycompany.pos.service.SupplierService;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

/**
 *
 * @author luuhiep
 */
@Component
public class SanPhamTheoNCCDialog extends javax.swing.JFrame {
 
    private ThemSanPhamTheoNCCDialog _themSanPhamTheoNCCDialog;
    
    private SupplierService _supplierService;
    private ProductService _productService;
    private ImportInvoiceService _importInvoiceService;
    
    private List<Supplier> _listSupplier;
    private List<Product> _listProduct;
    private List<ImportInvoice> _listImportInvoice;
    
    private Supplier _supplier;
    
    
    /**
     * Creates new form SanPhamTheoNCCDialog
     */
    public SanPhamTheoNCCDialog() {
        initComponents();
    }

    @Autowired
    public SanPhamTheoNCCDialog(ThemSanPhamTheoNCCDialog    themSanPhamTheoNCCDialog, 
                                SupplierService             supplierService, 
                                ProductService              productService, 
                                ImportInvoiceService        importInvoiceService) {
        initComponents();
        
        _themSanPhamTheoNCCDialog = themSanPhamTheoNCCDialog;
        
        _supplierService = supplierService;
        _productService = productService;
        _importInvoiceService = importInvoiceService;
        
        addListener();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProduct = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnThemSanPham1 = new javax.swing.JButton();
        btnThemSanPham2 = new javax.swing.JButton();
        btnThemSanPham3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        lbSlug = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tableProduct.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        tableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Sản phẩm", "Số lượng", "Ngày thêm", "Ngày đến", "Đã đến"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableProduct.setRowHeight(24);
        tableProduct.setSize(new java.awt.Dimension(600, 64));
        jScrollPane1.setViewportView(tableProduct);
        if (tableProduct.getColumnModel().getColumnCount() > 0) {
            tableProduct.getColumnModel().getColumn(0).setResizable(false);
            tableProduct.getColumnModel().getColumn(1).setResizable(false);
            tableProduct.getColumnModel().getColumn(2).setResizable(false);
            tableProduct.getColumnModel().getColumn(3).setResizable(false);
            tableProduct.getColumnModel().getColumn(4).setResizable(false);
            tableProduct.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Open Sans", 0, 36)); // NOI18N
        jLabel1.setText("Nhà cung cấp");

        btnThemSanPham1.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        btnThemSanPham1.setText("Trở lại");
        btnThemSanPham1.setMaximumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham1.setMinimumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham1.setPreferredSize(new java.awt.Dimension(70, 20));
        btnThemSanPham1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPham1ActionPerformed(evt);
            }
        });

        btnThemSanPham2.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        btnThemSanPham2.setText("Nhập hàng");
        btnThemSanPham2.setMaximumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham2.setMinimumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham2.setPreferredSize(new java.awt.Dimension(70, 20));
        btnThemSanPham2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPham2ActionPerformed(evt);
            }
        });

        btnThemSanPham3.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        btnThemSanPham3.setText("Xác nhập");
        btnThemSanPham3.setMaximumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham3.setMinimumSize(new java.awt.Dimension(70, 20));
        btnThemSanPham3.setPreferredSize(new java.awt.Dimension(70, 20));
        btnThemSanPham3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPham3ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel2.setText("Nhà cung cấp");

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        jLabel3.setText("Slug");

        lbName.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        lbName.setText("Sản phẩm");

        lbSlug.setFont(new java.awt.Font("Open Sans", 0, 18)); // NOI18N
        lbSlug.setText("nha-cung-cap");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbSlug)
                                    .addComponent(lbName)))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThemSanPham3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThemSanPham2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThemSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThemSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemSanPham2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThemSanPham3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbName))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lbSlug))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemSanPham1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPham1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnThemSanPham1ActionPerformed

    private void btnThemSanPham2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPham2ActionPerformed
        // TODO add your handling code here:
        
        _themSanPhamTheoNCCDialog.setListProductWithSupplier(_listProduct, _supplier);
        _themSanPhamTheoNCCDialog.setVisible(true);
    }//GEN-LAST:event_btnThemSanPham2ActionPerformed

    private void btnThemSanPham3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPham3ActionPerformed
        // TODO add your handling code here:
        int index = tableProduct.getSelectedRow();
        
        ImportInvoice importInvoice = _listImportInvoice.get(index);
        importInvoice.setArrivedAt(new Date());
        importInvoice.setArrived(true);
        
        _importInvoiceService.save(importInvoice);
        _importInvoiceService.confirmArrived(importInvoice);
        loadList();
    }//GEN-LAST:event_btnThemSanPham3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SanPhamTheoNCCDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SanPhamTheoNCCDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SanPhamTheoNCCDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SanPhamTheoNCCDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SanPhamTheoNCCDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThemSanPham1;
    private javax.swing.JButton btnThemSanPham2;
    private javax.swing.JButton btnThemSanPham3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbSlug;
    private javax.swing.JTable tableProduct;
    // End of variables declaration//GEN-END:variables

    public void setSupplier(Supplier supplier){
        _supplier = supplier;
        lbName.setText(_supplier.getName());
        lbSlug.setText(_supplier.getSlug());
        loadList();
    }
    
    private void addListener(){
        _themSanPhamTheoNCCDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                // your code
                _themSanPhamTheoNCCDialog.clearData();
                loadList();
            }
        });
    }
    
    private void loadList(){
        loadListSuppliers();
        loadListProduct();
        loadListImportInvoice();
        
        loadTable();
    }

    private void loadListSuppliers(){
        List<Supplier> listSupplier = _supplierService.findAll();
        _listSupplier = listSupplier;
    }
    
    private void loadListProduct(){
        List<Product> listProduct = _productService.findAll();
        _listProduct = listProduct;
    }
    
    private void loadListImportInvoice(){
        List<ImportInvoice> listImportInvoice = _importInvoiceService.findAll();
        _listImportInvoice = listImportInvoice;
    }
    
    private void loadTable(){
        DefaultTableModel d = (DefaultTableModel)tableProduct.getModel();
        d.setRowCount(0);
        
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        int i = 0;
        for(ImportInvoice c: _listImportInvoice) {
            Vector vector = new Vector();
            vector.add(i);
            
            if (!c.getSupplier().getIdSupplier().equals(_supplier.getIdSupplier()))
                continue;
            
            vector.add(c.getProduct().getName());
            vector.add(c.getQuantity());
            vector.add(formatter.format(c.getOrderedAt()));
            if (c.getArrived() == null || !c.getArrived()){
                vector.add("");
                vector.add("Chưa đến");
            } else { 
                vector.add(formatter.format(c.getArrivedAt()));
                vector.add( "Đã đến");
            }
            
            i++;
            d.addRow(vector);
        }
    }

}
